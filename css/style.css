/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* adding a basic reset */
*{
    margin:0;
    padding:0;
    box-sizing: border-box;
}


/* setting project wide font definitions in the body */
body{

    /* We are adding font related rules here because nomally these properties are normally inherited. so we are using the power of inheritance here. Body is the parent element to all its child elements, so font-family will be inherited by all the child elements of the body */

    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size:16px;
    font-size: 1.7;
    color: #777;
    padding:30px;
}

.header{
    height: 95vh;
    background-image:linear-gradient(
    to right bottom,
  rgba(126,213,111,0.8),
    rgba(40,180,131, 0.8)) ,
    url(../img/hero.jpg) ;
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
}

.logo-box{
    position: absolute;
    top:40px;
    left:40px;
}

.logo{
   height: 35px;
}

/* animations can be used again and again. as an example we can use it on the logo as shown below */

/* .logo:hover{
    animation: moveInRight 1s ease-out
} */

.text-box{
    position: absolute;
    top:40%;
    left:50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary{
    color:#fff;
    text-transform: uppercase;

    /* shaky bug fix. lecture - 8.creating cool css animations */
    backface-visibility: hidden;
    margin-bottom:60px;
}

.heading-primary-main{
    display:block;
    font-size:60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name:moveToLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-delay: 3s; */
    /* animation-iteration-count: 2; */
   
}

.heading-primary-sub{
    display: block;
    font-size:20px;
    font-weight: 400;
    letter-spacing: 17.4px;

    /* using the short form instead of the long form used in heading-primary-main class above */

    animation: moveToRight 1s ease-out
}

/* Now there are two types of animations in CSS. First one is to use the transition property and change properites on an events like hover. Other animation types are using Keyframes */

/* for browser performance it is only ever best to animate only two properties. 
One is opacity and the other is transform property */

@keyframes moveToLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveToRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}


/* pesudo class are special state of a selector.Below is the link pesudo class. We use pesudo classes to style elements under special condition*/

.btn:link,
.btn:visited{

    text-transform: uppercase;
    text-decoration: none;
    padding:15px 40px;
    /* to make use of paddings,margins and heights and widths we should change this to inline-block, because ancqour tag is by default a inline element */
    display: inline-block;
    border-radius: 100px;
    /* transition property should be in the initial state. Here the initial state is this class, which is .btn:link and .btn:visited */
    transition:all .2s;
    position: relative;

}

.btn:hover{
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

.btn:active{
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white{
    background-color: #fff;
    color:#777;
}

/* ABOUT PESUDO ELEMENTS - LECTURE 10.BUILDING A COMPLEX ANIMATED BUTTON - PART 2.THIS LECTURE IS VERY IMPORTANT */

.btn::after{
    content: "";
    display:inline-block;
    height:100%;
    width:100%;
    border-radius: 100px;
    position: absolute;
    top:0;
    left:0;
    z-index: -1;
    transition:all .4s;
}

.btn-white::after{
    background-color: #fff;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;

}

.btn-animated{
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode:backwards;
}